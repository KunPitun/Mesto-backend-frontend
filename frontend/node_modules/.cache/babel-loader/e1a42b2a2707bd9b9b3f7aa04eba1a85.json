{"ast":null,"code":"export const BASE_URL = 'https://api.kunpitun.mesto.nomoredomains.icu';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(checkResponse);\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(checkResponse).then(data => {\n    localStorage.setItem('jwt', data.token);\n    return data;\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};\n\nconst checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка ${res.status}`);\n};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","checkResponse","authorize","data","localStorage","setItem","token","checkToken","res","ok","json","Promise","reject","status"],"sources":["C:/Users/nicky/dev/Project work 3/react-mesto-auth/src/auth.js"],"sourcesContent":["export const BASE_URL = 'https://api.kunpitun.mesto.nomoredomains.icu';\r\n\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      email: email,\r\n      password: password\r\n    })\r\n  })\r\n    .then(checkResponse);\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      email: email,\r\n      password: password\r\n    })\r\n  })\r\n    .then(checkResponse)\r\n    .then((data) => {\r\n      localStorage.setItem('jwt', data.token);\r\n      return data;\r\n    })\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'authorization': `Bearer ${token}`,\r\n    }\r\n  })\r\n    .then(checkResponse);\r\n}\r\n\r\nconst checkResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка ${res.status}`);\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,8CAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,UAAU;IAFH,CAFwB;IAMjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBP,KAAK,EAAEA,KADY;MAEnBC,QAAQ,EAAEA;IAFS,CAAf;EAN2B,CAAvB,CAAL,CAWJO,IAXI,CAWCC,aAXD,CAAP;AAYD,CAbM;AAeP,OAAO,MAAMC,SAAS,GAAG,CAACV,KAAD,EAAQC,QAAR,KAAqB;EAC5C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFwB;IAKjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBP,KAAK,EAAEA,KADY;MAEnBC,QAAQ,EAAEA;IAFS,CAAf;EAL2B,CAAvB,CAAL,CAUJO,IAVI,CAUCC,aAVD,EAWJD,IAXI,CAWEG,IAAD,IAAU;IACdC,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BF,IAAI,CAACG,KAAjC;IACA,OAAOH,IAAP;EACD,CAdI,CAAP;AAeD,CAhBM;AAkBP,OAAO,MAAMI,UAAU,GAAID,KAAD,IAAW;EACnC,OAAOZ,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;IACnCK,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAkB,UAASU,KAAM;IAF1B;EAF0B,CAAzB,CAAL,CAOJN,IAPI,CAOCC,aAPD,CAAP;AAQD,CATM;;AAWP,MAAMA,aAAa,GAAIO,GAAD,IAAS;EAC7B,IAAIA,GAAG,CAACC,EAAR,EAAY;IACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;EACD;;EACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;AACD,CALD"},"metadata":{},"sourceType":"module"}