{"ast":null,"code":"export const BASE_URL = 'https://api.kunpitun.mesto.nomoredomains.icu';\n\nconst checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка ${res.status}`);\n};\n\nexport const getUserData = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  }).then(checkResponse);\n};\n\nclass Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._autorization = headers.authorization;\n    this._contentType = headers['Content-Type'];\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._autorization,\n        'Content-Type': this._contentType\n      }\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._autorization,\n        'Content-Type': this._contentType\n      }\n    }).then(this._checkResponse);\n  }\n\n  giveUserInfo(name, info) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: `Bearer ${this._autorization}`,\n        'Content-Type': this._contentType\n      },\n      body: JSON.stringify({\n        name: name,\n        about: info\n      })\n    }).then(this._checkResponse);\n  }\n\n  giveCardInfo(place, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._autorization,\n        'Content-Type': this._contentType\n      },\n      body: JSON.stringify({\n        name: place,\n        link: link\n      })\n    }).then(this._checkResponse);\n  }\n\n  changeLikeStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: {\n          authorization: this._autorization,\n          'Content-Type': this._contentType\n        }\n      }).then(this._checkResponse);\n    } else {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: {\n          authorization: this._autorization,\n          'Content-Type': this._contentType\n        }\n      }).then(this._checkResponse);\n    }\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._autorization,\n        'Content-Type': this._contentType\n      }\n    }).then(this._checkResponse);\n  }\n\n  giveAvatarInfo(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._autorization,\n        'Content-Type': this._contentType\n      },\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://api.kunpitun.mesto.nomoredomains.icu',\n  headers: {\n    authorization: `Bearer${localStorage.getItem('jwt')}`,\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","getUserData","token","fetch","headers","authorization","then","Api","constructor","baseUrl","_baseUrl","_autorization","_contentType","_checkResponse","getInitialCards","giveUserInfo","name","info","method","body","JSON","stringify","about","giveCardInfo","place","link","changeLikeStatus","cardId","isLiked","deleteCard","giveAvatarInfo","avatar","api","localStorage","getItem"],"sources":["C:/Users/nicky/dev/Project work 3/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["export const BASE_URL = 'https://api.kunpitun.mesto.nomoredomains.icu';\r\n\r\nconst checkResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка ${res.status}`);\r\n}\r\n\r\nexport const getUserData = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      'Content-Type': 'application/json',\r\n    }\r\n  })\r\n    .then(checkResponse);\r\n}\r\n\r\nclass Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._autorization = headers.authorization;\r\n    this._contentType = headers['Content-Type'];\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n  }\r\n\r\n  getUserData() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: {\r\n        authorization: this._autorization,\r\n        'Content-Type': this._contentType,\r\n      }\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: {\r\n        authorization: this._autorization,\r\n        'Content-Type': this._contentType\r\n      }\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  giveUserInfo(name, info) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: `Bearer ${this._autorization}`,\r\n        'Content-Type': this._contentType\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: info\r\n      })\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  giveCardInfo(place, link) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._autorization,\r\n        'Content-Type': this._contentType\r\n      },\r\n      body: JSON.stringify({\r\n        name: place,\r\n        link: link\r\n      })\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  changeLikeStatus(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          authorization: this._autorization,\r\n          'Content-Type': this._contentType\r\n        }\r\n      })\r\n        .then(this._checkResponse)\r\n    }\r\n    else {\r\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          authorization: this._autorization,\r\n          'Content-Type': this._contentType\r\n        }\r\n      })\r\n        .then(this._checkResponse)\r\n    }\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._autorization,\r\n        'Content-Type': this._contentType\r\n      }\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  giveAvatarInfo(link) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._autorization,\r\n        'Content-Type': this._contentType\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: link\r\n      })\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://api.kunpitun.mesto.nomoredomains.icu',\r\n  headers: {\r\n    authorization: `Bearer${localStorage.getItem('jwt')}`,\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}