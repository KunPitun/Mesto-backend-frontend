{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._autorization = headers['Authorization'];\n    this._contentType = headers['Content-Type'];\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserData() {\n    console.log(this._autorization);\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._autorization,\n        'Content-Type': this._contentType\n      }\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._autorization,\n        'Content-Type': this._contentType\n      }\n    }).then(this._checkResponse);\n  }\n\n  giveUserInfo(name, info) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._autorization,\n        'Content-Type': this._contentType\n      },\n      body: JSON.stringify({\n        name: name,\n        about: info\n      })\n    }).then(this._checkResponse);\n  }\n\n  giveCardInfo(place, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._autorization,\n        'Content-Type': this._contentType\n      },\n      body: JSON.stringify({\n        name: place,\n        link: link\n      })\n    }).then(this._checkResponse);\n  }\n\n  changeLikeStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: {\n          authorization: this._autorization,\n          'Content-Type': this._contentType\n        }\n      }).then(this._checkResponse);\n    } else {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: {\n          authorization: this._autorization,\n          'Content-Type': this._contentType\n        }\n      }).then(this._checkResponse);\n    }\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._autorization,\n        'Content-Type': this._contentType\n      }\n    }).then(this._checkResponse);\n  }\n\n  giveAvatarInfo(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._autorization,\n        'Content-Type': this._contentType\n      },\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst jwt = localStorage.getItem('jwt');\nconst api = new Api({\n  baseUrl: 'https://api.kunpitun.mesto.nomoredomains.icu',\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': jwt\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_baseUrl","_autorization","_contentType","_checkResponse","res","ok","json","Promise","reject","status","getUserData","console","log","fetch","authorization","then","getInitialCards","giveUserInfo","name","info","method","body","JSON","stringify","about","giveCardInfo","place","link","changeLikeStatus","cardId","isLiked","deleteCard","giveAvatarInfo","avatar","jwt","localStorage","getItem","api"],"sources":["C:/Users/nicky/dev/Project work 3/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._autorization = headers['Authorization'];\r\n    this._contentType = headers['Content-Type'];\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n  }\r\n\r\n  getUserData() {\r\n    console.log(this._autorization);\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: {\r\n        authorization: this._autorization,\r\n        'Content-Type': this._contentType,\r\n      }\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: {\r\n        authorization: this._autorization,\r\n        'Content-Type': this._contentType\r\n      }\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  giveUserInfo(name, info) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._autorization,\r\n        'Content-Type': this._contentType\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: info\r\n      })\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  giveCardInfo(place, link) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._autorization,\r\n        'Content-Type': this._contentType\r\n      },\r\n      body: JSON.stringify({\r\n        name: place,\r\n        link: link\r\n      })\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  changeLikeStatus(cardId, isLiked) {\r\n    if(isLiked) {\r\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          authorization: this._autorization,\r\n          'Content-Type': this._contentType\r\n        }\r\n      })\r\n        .then(this._checkResponse)\r\n    }\r\n    else {\r\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          authorization: this._autorization,\r\n          'Content-Type': this._contentType\r\n        }\r\n      })\r\n        .then(this._checkResponse)\r\n    }\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._autorization,\r\n        'Content-Type': this._contentType\r\n      }\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  giveAvatarInfo(link) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._autorization,\r\n        'Content-Type': this._contentType\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: link\r\n      })\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n}\r\nconst jwt = localStorage.getItem('jwt');\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://api.kunpitun.mesto.nomoredomains.icu',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': jwt,\r\n  }\r\n});\r\n\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}